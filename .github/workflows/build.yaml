name: Docker

on:
  push:
    branches: ["main"]
    paths:
      - "postgres/**"
      - ".github/workflows/build.yaml"

env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        image: ["ghcr.io/6ixfalls/supabase-postgres"]
        include:
          - image: "ghcr.io/6ixfalls/supabase-postgres"
            context: "{{defaultContext}}:postgres"
            tagFrom: "./postgres/Dockerfile"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image tag from Dockerfile
        if: matrix.tagFrom != null
        id: get-tag
        run: echo "IMAGE_TAG=$(grep -oE 'FROM[[:space:]]+[^[:space:]]+:[^[:space:]]+' ${{ matrix.tagFrom }} | cut -d ":" -f 2)" >> "$GITHUB_OUTPUT"
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context || '.' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.image }}:${{ steps.get-tag.outputs.IMAGE_TAG || 'latest' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
